/*
 * Â© Copyright - Lars Artmann aka. LartyHD 2019.
 */
import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    ext {
        kotlinVersion = '1.3.21'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-serialization:${kotlinVersion}")
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'kotlinx-serialization'
    apply plugin: 'idea'

    group = pluginGroup
    version = pluginVersion

    libsDirName = "libraries"

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    repositories {
        mavenCentral()
        jcenter()
        google()
        maven { url = ("http://nexus.hc.to/content/repositories/pub_releases/") }
        maven { url = ("https://hub.spigotmc.org/nexus/content/groups/public/") }
        maven { url = ("https://hub.spigotmc.org/nexus/content/repositories/snapshots/") }
        maven { url = ("https://oss.sonatype.org/content/groups/public/") }
        maven { url = ("https://oss.sonatype.org/content/repositories/snapshots/") }
        maven { url = ("http://repo.dmulloy2.net/content/groups/public/") }
        maven { url = ("https://repo.velocitypowered.com/snapshots/") }
        maven { url = ("http://repo.spongepowered.org/maven") }
        maven { url = ("https://jitpack.io") }
        // artifacts are published to this repository
        maven { url "https://kotlin.bintray.com/kotlinx" }
    }

    configurations {
        // configuration that holds jars to include in the jar
        compile.extendsFrom jarLibs
    }

    dependencies {

        compileOnly(fileTree(libsDirName))

        jarLibs 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.10.0'

        compileOnly "org.jetbrains.kotlin:kotlin-stdlib"
        compileOnly "org.jetbrains.kotlin:kotlin-reflect"
        compileOnly "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.1"

        testCompile "org.jetbrains.kotlin:kotlin-test"
        testCompile "org.jetbrains.kotlin:kotlin-test-junit"
        testCompile group: 'junit', name: 'junit', version: '4.13-beta-2'
//        testCompileOnly "org.junit.jupiter:junit-jupiter-api:5.3.1"
        testCompile "com.github.nhaarman:mockito-kotlin:2.1.0"
        testCompile 'io.mockk:mockk:1.9'

    }

    jar {
        from {
            configurations.jarLibs.collect { it.isDirectory() ? it : zipTree(it) }
        }
    }

    processResources {
        from(sourceSets.main.resources.srcDirs) {
            filter ReplaceTokens, tokens: [version: version, group: pluginGroup, name: rootProject.name, lowerName: rootProject.name.toLowerCase()]
//            filter ReplaceTokens, tokens: [group: group]
//            filter ReplaceTokens, tokens: [name: name]
        }
    }


    wrapper {
        gradleVersion = '5.2'
    }

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = '1.8'
            suppressWarnings = true
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = '1.8'
            suppressWarnings = true
        }
    }
}
