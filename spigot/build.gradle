/*
 * © Copyright - Lars Artmann aka. LartyHD 2019.
 */

/*
 * © Copyright - Lars Artmann aka. LartyHD 2019.
 */
import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.10'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.10'
    id 'org.jetbrains.kotlin.plugin.allopen' version "1.6.10"
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'idea'
    id 'java'
}

group = pluginGroup as Object
version = pluginVersion as Object

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
    google()
    maven { url = ("https://hub.spigotmc.org/nexus/content/repositories/snapshots/") }
    maven { url = ("https://oss.sonatype.org/content/groups/public/") }
    maven { url = ("https://oss.sonatype.org/content/repositories/snapshots/") }
    maven { url = ("https://repo.dmulloy2.net/content/groups/public/") }
    maven { url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
    maven { url = ("https://jitpack.io") }
    maven { url = ("https://maven.addstar.com.au/artifactory/all-release/") }
}

dependencies {

    api("org.spigotmc:spigot-api:${versions_spigot}")
    //testCompile("org.spigotmc:spigot-api:${versions_spigot}")
    api("com.github.AstrideUG.DarkBedrock:Darkness-Spigot:7e5c48f869")
    api("me.clip:placeholderapi:2.10.10")
    implementation 'net.kyori:adventure-platform-bukkit:4.0.1'
    api("com.github.milkbowl:VaultAPI:1.7.1")

    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.6.10")
    implementation("org.jetbrains.kotlin:kotlin-reflect:1.6.10")
    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0')
    implementation('org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2')
    implementation('com.rollbar:rollbar-java:1.8.1')

    /*testCompile("org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.1")
    testCompile "org.jetbrains.kotlin:kotlin-test"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit"
    testCompile group: 'junit', name: 'junit', version: '4.13-beta-2'
    testCompile "com.github.nhaarman:mockito-kotlin:2.1.0"
    testCompile 'io.mockk:mockk:1.9'
*/
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version, group: pluginGroup, name: rootProject.name, lowerName: rootProject.name.toLowerCase()]
    }
}


compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict', '-Xuse-experimental=kotlinx.serialization.ImplicitReflectionSerializer']
        freeCompilerArgs += [
                "-Xopt-in=kotlin.RequiresOptIn",
                "-Xopt-in=kotlinx.serialization.ImplicitReflectionSerializer",
        ]
        jvmTarget = '1.8'
        suppressWarnings = true
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict', '-Xuse-experimental=kotlinx.serialization.ImplicitReflectionSerializer']
        freeCompilerArgs += [
                "-Xopt-in=kotlin.RequiresOptIn",
                "-Xopt-in=kotlinx.serialization.ImplicitReflectionSerializer",
        ]
        jvmTarget = '1.8'
        suppressWarnings = true
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += "-opt-in=org.mylibrary.OptInAnnotation"
    }
}


shadowJar {
    archiveFileName = "GunGame-Spigot-"+version+"-all.jar"

    dependencies {
        include(dependency('de.astride:.*'))
        include(dependency('org.jetbrains.kotlin:.*'))
        include(dependency('org.jetbrains.kotlinx:.*'))
        include(dependency('com.rollbar:.*'))
    }

    //relocate 'kotlin', 'de.astride.gungame.lib.kotlin'
    relocate 'kotlinx', 'de.astride.gungame.lib.kotlinx'
}

artifacts {
    archives shadowJar
}
